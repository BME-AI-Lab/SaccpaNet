Search.setIndex({"docnames": ["api/lib", "api/lib.modules", "api/lib.modules.core", "api/lib.modules.core.SpatialArgmax2d", "api/lib.modules.core.SpatialSoftArgmax2d", "api/lib.modules.core.codec", "api/lib.modules.core.codec.heatmap_utils", "api/lib.modules.core.codec.msra_heatmap", "api/lib.modules.core.function", "api/lib.modules.core.inference", "api/lib.modules.core.loss", "api/lib.modules.core.rand", "api/lib.modules.core.sample_range", "api/lib.modules.core.sampler", "api/lib.modules.dataset", "api/lib.modules.dataset.JointsDataset", "api/lib.modules.dataset.SQLJointsDataset", "api/lib.modules.dataset.SQLJointsDatasetFlipCut", "api/lib.modules.dataset.codec", "api/lib.modules.dataset.codec.heatmap_utils", "api/lib.modules.dataset.codec.msra_heatmap", "api/lib.modules.dataset.common", "api/lib.modules.dataset.dataset_generator", "api/lib.modules.dataset.utils", "api/lib.modules.dataset.utils.transforms", "api/lib.networks", "api/lib.networks.SaccpaNet", "api/lib.networks.SaccpaNetAblation", "api/lib.networks.SaccpaNetAblationNetStructureParams", "api/lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention", "api/lib.networks.SaccpaRes", "api/lib.networks.SaccpaResClip", "api/lib.networks.eca", "api/lib.networks.eca_module", "api/lib.networks.parameter_init", "api/lib.networks.vit", "api/lib.networks.vit-pytorch", "api/lib.procedures", "api/lib.procedures.dataloaders_procedure", "api/lib.procedures.evaluations", "api/lib.procedures.procedures", "api/models", "api/models.ClassificationBase", "api/models.ClassificationWithCoordinate", "api/models.ClassificationWithCoordinateDouble", "api/models.RegressionBase", "api/models.SACCPA_sample_ablation_A", "api/models.SACCPA_sample_ablation_AB", "api/models.SACCPA_sample_ablation_ABC", "api/models.SACCPA_sample_ablation_network_structure_parameters", "api/models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention", "api/models.SACCPA_sample_ablation_null", "api/models.hyperparameters", "api/models.saccpa_sample", "api/modules", "code_running", "experiments", "index", "project_organization", "reference_index"], "filenames": ["api\\lib.rst", "api\\lib.modules.rst", "api\\lib.modules.core.rst", "api\\lib.modules.core.SpatialArgmax2d.rst", "api\\lib.modules.core.SpatialSoftArgmax2d.rst", "api\\lib.modules.core.codec.rst", "api\\lib.modules.core.codec.heatmap_utils.rst", "api\\lib.modules.core.codec.msra_heatmap.rst", "api\\lib.modules.core.function.rst", "api\\lib.modules.core.inference.rst", "api\\lib.modules.core.loss.rst", "api\\lib.modules.core.rand.rst", "api\\lib.modules.core.sample_range.rst", "api\\lib.modules.core.sampler.rst", "api\\lib.modules.dataset.rst", "api\\lib.modules.dataset.JointsDataset.rst", "api\\lib.modules.dataset.SQLJointsDataset.rst", "api\\lib.modules.dataset.SQLJointsDatasetFlipCut.rst", "api\\lib.modules.dataset.codec.rst", "api\\lib.modules.dataset.codec.heatmap_utils.rst", "api\\lib.modules.dataset.codec.msra_heatmap.rst", "api\\lib.modules.dataset.common.rst", "api\\lib.modules.dataset.dataset_generator.rst", "api\\lib.modules.dataset.utils.rst", "api\\lib.modules.dataset.utils.transforms.rst", "api\\lib.networks.rst", "api\\lib.networks.SaccpaNet.rst", "api\\lib.networks.SaccpaNetAblation.rst", "api\\lib.networks.SaccpaNetAblationNetStructureParams.rst", "api\\lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.rst", "api\\lib.networks.SaccpaRes.rst", "api\\lib.networks.SaccpaResClip.rst", "api\\lib.networks.eca.rst", "api\\lib.networks.eca_module.rst", "api\\lib.networks.parameter_init.rst", "api\\lib.networks.vit.rst", "api\\lib.networks.vit-pytorch.rst", "api\\lib.procedures.rst", "api\\lib.procedures.dataloaders_procedure.rst", "api\\lib.procedures.evaluations.rst", "api\\lib.procedures.procedures.rst", "api\\models.rst", "api\\models.ClassificationBase.rst", "api\\models.ClassificationWithCoordinate.rst", "api\\models.ClassificationWithCoordinateDouble.rst", "api\\models.RegressionBase.rst", "api\\models.SACCPA_sample_ablation_A.rst", "api\\models.SACCPA_sample_ablation_AB.rst", "api\\models.SACCPA_sample_ablation_ABC.rst", "api\\models.SACCPA_sample_ablation_network_structure_parameters.rst", "api\\models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention.rst", "api\\models.SACCPA_sample_ablation_null.rst", "api\\models.hyperparameters.rst", "api\\models.saccpa_sample.rst", "api\\modules.rst", "code_running.md", "experiments.md", "index.rst", "project_organization.md", "reference_index.rst"], "titles": ["lib package", "lib.modules package", "lib.modules.core package", "lib.modules.core.SpatialArgmax2d module", "lib.modules.core.SpatialSoftArgmax2d module", "lib.modules.core.codec package", "lib.modules.core.codec.heatmap_utils module", "lib.modules.core.codec.msra_heatmap module", "lib.modules.core.function module", "lib.modules.core.inference module", "lib.modules.core.loss module", "lib.modules.core.rand module", "lib.modules.core.sample_range module", "lib.modules.core.sampler module", "lib.modules.dataset package", "lib.modules.dataset.JointsDataset module", "lib.modules.dataset.SQLJointsDataset module", "lib.modules.dataset.SQLJointsDatasetFlipCut module", "lib.modules.dataset.codec package", "lib.modules.dataset.codec.heatmap_utils module", "lib.modules.dataset.codec.msra_heatmap module", "lib.modules.dataset.common module", "lib.modules.dataset.dataset_generator module", "lib.modules.dataset.utils package", "lib.modules.dataset.utils.transforms module", "lib.networks namespace", "lib.networks.SaccpaNet module", "lib.networks.SaccpaNetAblation module", "lib.networks.SaccpaNetAblationNetStructureParams module", "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention module", "lib.networks.SaccpaRes module", "lib.networks.SaccpaResClip module", "lib.networks.eca module", "lib.networks.eca_module module", "lib.networks.parameter_init module", "lib.networks.vit module", "lib.networks.vit-pytorch module", "lib.procedures package", "lib.procedures.dataloaders_procedure module", "lib.procedures.evaluations module", "lib.procedures.procedures module", "models package", "models.ClassificationBase module", "models.ClassificationWithCoordinate module", "models.ClassificationWithCoordinateDouble module", "models.RegressionBase module", "models.SACCPA_sample_ablation_A module", "models.SACCPA_sample_ablation_AB module", "models.SACCPA_sample_ablation_ABC module", "models.SACCPA_sample_ablation_network_structure_parameters module", "models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention module", "models.SACCPA_sample_ablation_null module", "models.hyperparameters module", "models.SACCPA_sample module", "models", "Get started", "Experiments", "Welcome to Posture Experiment\u2019s documentation!", "Project organization", "Reference Index"], "terms": {"modul": [0, 25, 37, 41, 54, 57, 59], "core": [0, 1], "submodul": [0, 1, 54, 59], "dataset": [0, 1, 56], "network": [0, 13, 45, 55, 58, 59], "namespac": [0, 59], "saccpanet": [0, 25, 27, 28, 29], "attentionmodul": [], "block": [0, 25, 26, 27, 28, 29, 31], "dwconv": [0, 25, 26, 27, 28, 29], "hamburg": [0, 25, 26, 27, 28, 29], "lighthamhead": [0, 25, 26, 27, 28, 29], "mlp": [0, 25, 26, 27, 28, 29], "nmf2d": [0, 25, 26, 27, 28, 29], "overlappatchemb": [0, 25, 26, 27, 28, 29], "saccpa": [0, 25, 26, 27, 28, 29], "spatialattent": [0, 25, 26, 27, 28, 29], "stemconv": [0, 25, 26, 27, 28, 29], "uattent": [0, 25, 26, 27, 28, 29], "uattentionlay": [0, 25, 26, 27, 28, 29], "resiz": [0, 21, 25, 26, 27, 28, 29], "saccpar": [0, 25], "resnet": [0, 25, 30, 31, 32], "saccpabasicblock": [0, 25, 30, 31], "saccpabottleneck": [0, 25, 30, 31], "conv3x3": [0, 25, 30, 31, 32], "saccpa_resnet101": [0, 25, 30, 31], "saccpa_resnet152": [0, 25, 30, 31], "saccpa_resnet18": [0, 25, 30, 31], "saccpa_resnet34": [0, 25, 30, 31], "saccpa_resnet50": [0, 25, 30, 31], "eca": [0, 25, 33], "ecabasicblock": [0, 25, 32], "ecabottleneck": [0, 25, 32], "eca_resnet101": [0, 25, 32], "eca_resnet152": [0, 25, 32], "eca_resnet18": [0, 25, 32], "eca_resnet34": [0, 25, 32], "eca_resnet50": [0, 25, 32], "eca_modul": [0, 25], "eca_lay": [0, 25, 33], "parameter_init": [0, 25], "constant_init": [0, 25, 34], "normal_init": [0, 25, 34], "trunc_normal_": [0, 25, 34], "trunc_normal_init": [0, 25, 34], "procedur": [0, 59], "dataloaders_procedur": [0, 37], "create_dataload": [0, 37, 38], "create_test_dataload": [0, 37, 38], "create_train_dataload": [0, 37, 38], "create_validation_dataload": [0, 37, 38], "evalu": [0, 14, 15, 16, 17, 37], "evaluate_cl": [0, 37, 39], "inference_model_classification_coordin": [0, 37, 39], "plot_auc": [], "update_log": [0, 37, 39], "write": [0, 37, 39], "write_log": [0, 37, 39], "create_cl": [0, 37, 40], "create_cls_kpt": [0, 37, 40], "create_kpt": [0, 37, 40], "create_load_cls_kpt": [], "load_cls_model": [0, 37, 40], "load_pretrained_kpt": [0, 37, 40], "train_and_evalu": [0, 37, 40], "train_model": [0, 37, 40], "spatialsoftargmax2d": [1, 2, 3], "function": [1, 2, 11, 26, 27, 28, 29, 31, 32, 35, 42], "accuraci": [1, 2, 8], "calc_dist": [1, 2, 8], "dist_acc": [1, 2, 8], "infer": [1, 2], "get_final_pr": [1, 2, 9], "get_max_pr": [1, 2, 9], "loss": [1, 2, 3, 42, 56], "jointsmseloss": [1, 2, 10], "rand": [1, 2, 3], "log_norm": [1, 2, 11], "log_uniform": [1, 2, 11], "normal": [1, 2, 3, 8, 11, 34], "plot_rand_cdf": [1, 2, 11], "power2_or_log_uniform": [1, 2, 11], "power2_uniform": [1, 2, 11], "quantiz": [1, 2, 11], "uniform": [1, 2, 11], "validate_rand": [1, 2, 11], "sample_rang": [], "sampler": [1, 2], "adjust_block_compat": [], "check_regnet_constraint": [1, 2, 13], "generate_regnet": [1, 2, 13], "generate_regnet_ful": [1, 2, 13], "regnet_sampl": [1, 2, 13], "sample_cfg": [1, 2, 13], "sample_paramet": [1, 2, 13], "codec": [1, 2], "util": [1, 14], "jointsdataset": [1, 14, 16, 17], "sqljointsdataset": [1, 14, 17], "random": [1, 11, 14, 16, 17, 34, 57], "common": [1, 14], "resolveimag": [1, 14, 21], "sql_index": [1, 14, 21], "fill_hol": [1, 14, 21], "dataset_gener": [1, 14], "create_meshgrid": [2, 3], "forward": [2, 3, 10, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "class": [3, 7, 10, 15, 16, 17, 21, 26, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "arg": [3, 10, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "ani": [3, 10, 15, 16, 17, 26, 27, 28, 29, 30, 32, 33, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "kwarg": [3, 10, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "sourc": [3, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 58], "base": [3, 7, 10, 13, 15, 16, 17, 21, 26, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56], "creat": [3, 55, 56], "comput": [3, 31, 35], "spatial": 3, "soft": 3, "argmax": 3, "2d": 3, "given": [3, 6], "input": [3, 7, 26, 27, 28, 29, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "heatmap": [3, 6, 7, 8, 9], "return": [3, 6, 7, 8, 13, 26, 27, 28, 29, 30, 31, 32, 42, 45, 46, 47, 48, 49, 50, 51, 53], "index": [3, 21, 57], "maximum": [3, 6, 34], "coordin": [3, 6, 7, 16, 17, 21], "give": 3, "map": [3, 9, 26, 27, 28, 29, 33], "The": [3, 6, 7, 26, 27, 28, 29, 30, 31, 32, 34, 55, 56], "output": [3, 8, 10, 26, 27, 28, 29], "order": 3, "i": [3, 6, 7, 8, 26, 27, 28, 29, 45, 55, 56, 58], "x": [3, 8, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 35, 39], "coord": [3, 24], "y": [3, 8, 55], "paramet": [3, 6, 7, 11, 13, 26, 27, 28, 29, 30, 31, 32, 33, 42, 45, 46, 47, 48, 49, 50, 51, 53, 56], "normalized_coordin": 3, "option": 3, "bool": [3, 7, 30, 31, 32, 35], "wether": 3, "rang": 3, "1": [3, 7, 8, 16, 17, 30, 31, 32, 34, 55, 57], "otherwis": 3, "shape": [3, 6, 7, 26, 27, 28, 29, 32], "default": [3, 7, 55], "true": [3, 30, 31, 32, 38], "b": [3, 6, 13, 24, 26, 27, 28, 29, 34], "n": [3, 6, 7, 11, 26, 27, 28, 29, 32, 34, 55], "h": [3, 6, 7, 26, 27, 28, 29, 32], "w": [3, 6, 7, 13, 26, 27, 28, 29, 32], "2": [3, 6, 11, 34, 55, 57], "exampl": 3, "torch": [3, 34, 45], "4": [3, 26, 27, 28, 29, 30, 31, 32, 55], "3": [3, 6, 7, 13, 30, 31, 32, 55], "m": [3, 56], "tgm": 3, "1x4x2": 3, "x_coord": 3, "y_coord": 3, "chunk": [3, 13, 56], "dim": 3, "tensor": [3, 26, 27, 28, 29, 32, 34], "target": [6, 7, 8, 10], "hm_type": 8, "gaussian": [6, 7, 8, 11], "thr": 8, "0": [6, 7, 8, 16, 17, 24, 34, 55], "5": [7, 8], "calcul": 8, "accord": [8, 56], "pck": 8, "us": [6, 7, 8, 34, 45, 56], "ground": 8, "truth": 8, "rather": 8, "than": [8, 26, 27, 28, 29], "locat": [6, 8], "first": 8, "valu": [6, 7, 8, 11, 34], "averag": 8, "across": 8, "idx": 8, "follow": [7, 8, 13, 56], "individu": [8, 56], "pred": [8, 15, 16, 17], "dist": 8, "percentag": 8, "below": 8, "threshold": [8, 56], "while": [8, 31, 35], "ignor": [8, 31, 35], "config": [13, 55, 56], "batch_heatmap": 9, "center": 24, "scale": 24, "get": [6, 9, 57], "predict": [6, 7, 9, 26, 27, 28, 29], "from": [6, 7, 9, 11, 13, 21, 34, 45, 56], "score": [7, 9], "numpi": [9, 24], "ndarrai": [6, 7, 9, 24], "batch_siz": [6, 9, 24, 38], "num_joint": [9, 24], "height": [6, 9, 24, 26, 27, 28, 29], "width": [6, 9, 13, 24, 26, 27, 28, 29], "target_weight": 10, "sampl": [11, 13], "close": 11, "interv": [11, 16, 17], "low": 11, "high": 11, "q": [11, 13], "clip": 11, "log": [11, 56], "distribut": [6, 11, 34], "rand_typ": 11, "10000": 11, "visual": 11, "cdf": 11, "rand_fun": 11, "result": 11, "should": [6, 7, 11, 31, 35, 55], "linear": 11, "select": [11, 21, 30, 31, 32, 33], "debug": 11, "onli": [11, 45], "power": 11, "divis": 11, "f": [11, 55, 56], "op": 11, "ufunc": 11, "floor": 11, "have": 11, "": [11, 15, 56], "type": [6, 7, 11, 26, 27, 28, 29, 32, 34, 42, 45, 46, 47, 48, 49, 50, 51, 53], "err_str": 11, "valid": [11, 13, 42, 56], "number": [6, 7, 11, 33], "gener": [6, 7, 11, 13, 34, 56], "g": 13, "adjust": [], "compat": [], "bottleneck": 32, "group": [], "param": [13, 26, 27, 28, 29, 34, 39, 40], "check": 13, "regnet": 13, "specif": [13, 55], "constraint": 13, "w_a": 13, "w_0": 13, "w_m": 13, "d": [6, 7, 13], "8": [7, 13, 26, 27, 28, 29], "per": 13, "stage": 13, "depth": 13, "ss": 13, "cfg": [13, 15, 16, 17], "main": 13, "seed": [13, 56], "sample_s": 13, "32": [13, 26, 27, 28, 29], "those": 13, "ar": [7, 13, 26, 27, 28, 29, 34, 55, 56], "uniqu": 13, "kei": 13, "val": [6, 13, 34], "list": [6, 13, 26, 27, 28, 29, 45, 57], "heatmap_util": [2, 5, 18], "gaussian_blur": [2, 5, 6], "generate_gaussian_heatmap": [2, 5, 6], "generate_unbiased_gaussian_heatmap": [2, 5, 6], "get_heatmap_maximum": [2, 5, 6], "refine_keypoint": [2, 5, 6], "refine_keypoints_dark": [2, 5, 6], "refine_keypoints_dark_udp": [2, 5, 6], "msra_heatmap": [2, 5, 18], "msraheatmap": [2, 5, 7], "transform": [14, 23], "affine_transform": [14, 23, 24], "crop": [14, 23, 24], "flip_back": [14, 23, 24], "fliplr_joint": [14, 23, 24], "get_3rd_point": [14, 23, 24], "get_affine_transform": [14, 23, 24], "get_dir": [14, 23, 24], "transform_pr": [14, 23, 24], "calculate_random_scale_and": [14, 15], "flip_joint": [14, 15], "generate_target": [], "select_data": [], "db_connection_str": [14, 16, 17], "table_nam": [14, 16, 17], "test_table_nam": [], "output_dir": [15, 16, 17], "joint": [15, 24], "joints_vi": [15, 24], "data_numpi": 15, "c": [15, 16, 17, 21, 26, 27, 28, 29, 32, 55], "db": [16, 17, 21], "sqlite": [16, 17, 21], "annot": [16, 17], "decod": [5, 6, 7], "encod": [5, 7], "kernel": [6, 7, 30, 31, 32, 33], "int": [6, 7, 26, 27, 28, 29], "11": [6, 7], "num_keypoint": 6, "k": [6, 7], "np": [6, 7], "model": [6, 16, 17, 21, 30, 31, 32, 39, 40, 57, 59], "size": [6, 7, 26, 27, 28, 29, 30, 31, 32, 33, 35], "which": [6, 42, 55, 56], "match": 6, "sigma": [6, 7], "when": [6, 34, 56], "train": [6, 25, 30, 31, 32, 35, 42, 56], "17": 6, "heatmap_s": [6, 7], "keypoint": [6, 7], "keypoints_vis": [6, 7], "tupl": [6, 7], "visibl": [6, 7], "float": [6, 7, 34], "A": [6, 42, 45], "each": [6, 26, 27, 28, 29, 56], "instanc": [6, 7, 31, 35], "If": [6, 30, 31, 32], "singl": [6, 58], "expand": 6, "where": [6, 7, 21], "keypoint_weight": [6, 7], "weight": [6, 7, 57], "dark": [6, 7], "pose": [6, 7], "respons": 6, "loc": 6, "refin": 6, "move": 6, "toward": 6, "second": 6, "25": 6, "pixel": [6, 26, 27, 28, 29], "oper": 6, "place": 6, "dimens": [6, 7], "blur_kernel_s": [6, 7], "awar": [6, 55], "see": [6, 7, 56], "detail": [6, 7], "blur": [6, 7], "udp": 6, "input_s": 7, "unbias": 7, "fals": [7, 30, 31, 32], "object": [7, 21], "repres": 7, "via": 7, "msra": 7, "approach": 7, "paper": [7, 56], "simpl": 7, "baselin": 7, "human": 7, "estim": 7, "track": 7, "xiao": 7, "et": 7, "al": 7, "2018": 7, "imag": [7, 26, 27, 28, 29], "whether": 7, "method": [7, 34], "darkpos": 7, "expir": 7, "formula": 7, "space": [7, 13], "It": [7, 13, 56], "usual": 7, "confid": 7, "note": 7, "origin": 7, "dict": 7, "query_str": 21, "depth_arrai": 21, "depth_imag": 21, "connect": 21, "224": 21, "img": [21, 24, 26, 27, 28, 29], "pt": 24, "t": 24, "output_s": 24, "rot": 24, "output_flip": 24, "matched_part": 24, "ouput_flip": 24, "flip": 24, "shift": 24, "arrai": 24, "dtype": 24, "float32": 24, "inv": 24, "src_point": 24, "rot_rad": 24, "cls_seg": [25, 26, 27, 28, 29], "compute_coef": [25, 26, 27, 28, 29], "local_step": [25, 26, 27, 28, 29], "init_weight": [25, 26, 27, 28, 29], "expans": [25, 30, 31, 32], "attent": [26, 27, 28, 29], "better": [26, 27, 28, 29], "matrix": [26, 27, 28, 29], "decomposit": [26, 27, 28, 29], "thi": [26, 27, 28, 29, 31, 35, 45, 55, 56, 58], "head": [26, 27, 28, 29], "implement": [26, 27, 28, 29], "hamnet": [26, 27, 28, 29], "ham_channel": [26, 27, 28, 29], "channel": [26, 27, 28, 29, 33], "ham_kwarg": [26, 27, 28, 29], "kwagr": [26, 27, 28, 29], "ham": [26, 27, 28, 29], "feat": [26, 27, 28, 29], "classifi": [26, 27, 28, 29], "_matrixdecomposition2dbas": [26, 27, 28, 29], "coef": [26, 27, 28, 29], "patch": [26, 27, 28, 29, 56], "embed": [26, 27, 28, 29], "fuction": [26, 27, 28, 29], "level": [26, 27, 28, 29], "mode": [26, 27, 28, 29], "bilinear": [26, 27, 28, 29], "align_corn": [26, 27, 28, 29], "none": [26, 27, 28, 29, 31, 34], "in_plan": [30, 31, 32], "out_plan": [30, 31, 32], "stride": [26, 27, 28, 29, 30, 31, 32], "3x3": [30, 31, 32], "convolut": [26, 27, 28, 29, 30, 31, 32], "pad": [30, 31, 32], "k_size": [30, 31, 32, 33], "num_class": [26, 27, 28, 29, 30, 31, 32], "1000": [30, 31, 32], "pretrain": [30, 31, 32, 57], "construct": [30, 31, 32, 33], "101": [30, 31, 32], "adapt": [30, 31, 32, 33], "classif": [30, 31, 32, 42, 57], "pre": [30, 31, 32], "imagenet": [30, 31, 32], "152": [30, 31, 32], "18": [30, 31, 32], "34": [30, 31, 32], "50": [30, 31, 32], "featur": [26, 27, 28, 29, 33], "nn": 34, "bia": 34, "mean": 34, "std": 34, "fill": 34, "drawn": 34, "truncat": 34, "effect": 34, "mathcal": 34, "text": 34, "outsid": 34, "redrawn": 34, "until": 34, "thei": 34, "within": [31, 34, 35], "bound": 34, "work": [34, 55], "best": [34, 56], "leq": 34, "modifi": 34, "http": [34, 56], "github": [34, 56], "com": [34, 56], "pytorch": [0, 25, 34, 55], "blob": 34, "master": 34, "init": 34, "py": [34, 45, 56], "an": 34, "dimension": 34, "standard": 34, "deviat": 34, "minimum": 34, "cutoff": 34, "with_quilt": 38, "all_conditions_str": 39, "result_dir": 39, "ly": 39, "ly_hat": 39, "image_id": 39, "ly_weight": 39, "input_storag": 39, "test_dataload": [39, 40], "param_nam": 39, "filenam": 39, "string": 39, "log_fil": 39, "classification_model": [], "kpt_model": 40, "keypoint_model": 40, "ckpt_path": 40, "default_root_dir": 40, "model_nam": 40, "train_dataload": 40, "epoch": [40, 56], "classificationbas": [41, 54, 59], "classificationmodul": [41, 42, 43, 44, 54, 59], "configure_optim": [41, 42, 45], "test_step": [41, 42, 45], "training_step": [41, 42, 45], "validation_step": [41, 42, 45], "classificationwithcoordin": [41, 54, 59], "mylightningmodul": [41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 59], "regressionbas": [41, 54, 59], "regressionmodul": [41, 45, 46, 47, 48, 49, 50, 51, 53, 54, 59], "get_batch_output": [41, 42, 45], "loss_calcul": [41, 42, 45], "hyperparamet": [41, 42, 45, 54, 59], "saccpa_sampl": 56, "lightningmodul": [42, 45], "set": [42, 55], "up": 42, "step": [42, 56], "optim": [42, 45], "batch": [42, 45], "batch_idx": [42, 45], "import": 45, "case": 45, "one": [31, 35, 45], "_summary_": [26, 27, 28, 29, 42, 45, 46, 47, 48, 49, 50, 51, 53], "_type_": [42, 45, 46, 47, 48, 49, 50, 51, 53], "_description_": [42, 45, 46, 47, 48, 49, 50, 51, 53], "packag": [54, 57, 59], "In": [55, 56], "section": [13, 55], "we": 55, "demonstr": 55, "how": 55, "preapr": 55, "experi": [55, 58], "code": 55, "test": 57, "theori": 55, "also": 55, "linux": 55, "mamba": 55, "python": [55, 56], "provid": [55, 56], "enviro": 55, "yml": 55, "env": 55, "condfa": [], "activ": 55, "posture_experi": 55, "pleas": 55, "lightn": 55, "sqlsalchemi": 55, "version": 55, "newer": 55, "introduc": 55, "break": 55, "chang": 55, "nvidia": 55, "forg": 55, "9": 55, "torchvis": 55, "torchaudio": 55, "cuda": 55, "panda": 55, "seaborn": 55, "6": 55, "sqlalchemi": 55, "48": 55, "opencv": 55, "scikit": 55, "learn": 55, "tqdm": 55, "torchmetr": 55, "data": [55, 56], "share": 55, "expriment": 55, "can": [55, 56], "directli": 55, "edit": 55, "e": 55, "u": 55, "openmim": 55, "mim": 55, "mmengin": 55, "mmcv": 55, "sphinx": 55, "myst": 55, "parser": 55, "copybutton": 55, "markdown": 55, "tabl": [55, 56], "rtd": 55, "theme": 55, "were": 56, "sequenc": 56, "cd": 56, "01": 56, "random_search": 56, "mkdir": 56, "generate_run": 56, "helper": 56, "local_run": 56, "To": 56, "make": 56, "multipl": 56, "gpu": 56, "you": 56, "split": 56, "put": 56, "them": [31, 35, 56], "folder": 56, "copi": 56, "back": 56, "everyth": 56, "finish": 56, "csv": 56, "file": 56, "line": 56, "contain": 56, "script": 56, "aggregate_result": 56, "big": 56, "excel": 56, "filter": 56, "good": 56, "defin": [31, 35, 56], "plot": 56, "against": 56, "perform": [31, 35, 56], "updat": 56, "random_seaerch_param": 56, "start": [56, 57], "root": 56, "repo": 56, "02": 56, "manual_search": 56, "mmpose": [56, 57], "our": 56, "custom": 56, "git": 56, "clone": 56, "open": 56, "mmlab": 56, "rclone": 56, "patched_cod": 56, "obtain": 56, "prepar": 56, "coco": 56, "whole": 56, "bodi": 56, "instruct": 56, "save": 56, "checkpoint": 56, "weight_transf": 56, "generate_checkpoint": [], "transfer_weight": 56, "pth": 56, "raw_checkpoint": [], "merged_model": 56, "finetune_parameterized_by_config": 56, "posture_classif": 56, "all": [31, 35, 56], "being": 56, "tri": 56, "project": 57, "organ": 57, "instal": 57, "relat": 57, "dependeci": 57, "local": 57, "depend": 57, "addit": 57, "build": 57, "search": 57, "manual": 57, "03": 57, "04": 57, "transfer": 57, "05": 57, "finetun": 57, "06": 57, "refer": 57, "lib": [57, 59], "page": 57, "subpackag": 59, "ks_test_cdf": [], "plot_ecdf": [], "generate_heatmap": [14, 15], "setup_config_const": [14, 15], "coverag": 55, "pytest": 55, "xdoctest": 55, "generate_checkpoint_templ": 56, "best_coco": 56, "wholebody_ap_epoch_": 56, "template_checkpoint": 56, "dependencei": 57, "check_complexity_constraint": [1, 2, 13], "equat": 13, "design": 13, "depthwis": [26, 27, 28, 29], "c_dim": [26, 27, 28, 29], "c_ham_channel": [26, 27, 28, 29], "segment": [26, 27, 28, 29], "multi": [26, 27, 28, 29], "ci": [26, 27, 28, 29], "hi": [26, 27, 28, 29], "wi": [26, 27, 28, 29], "reduc": [26, 27, 28, 29], "patch_siz": [26, 27, 28, 29], "16": [26, 27, 28, 29], "saccpanetabl": [0, 25], "saccpanetablationnetstructureparam": [0, 25], "saccpanetablationnetstructureparamsatrousattent": [0, 25], "saccparesclip": [0, 25], "vit": [0, 25], "resizedtransform": [0, 25, 35], "partial_cl": [0, 25, 35], "vit_b_16": [0, 25, 35], "vit_b_32": [0, 25, 35], "vit_h_14": [0, 25, 35], "vit_l_16": [0, 25, 35], "vit_l_32": [0, 25, 35], "inference_clasification_model": [0, 37, 39], "save_auc": [0, 37, 39], "save_roc": [0, 37, 39], "load_cls_kpt": [0, 37, 40], "spatialargmax2d": [1, 2], "hardargmax2d": [1, 2, 3], "sqljointsdatasetflipcut": [1, 14], "postur": [16, 17, 21], "augmented_dataset": 17, "layer": 31, "initial_lay": 31, "everi": [31, 35], "call": [31, 35], "overridden": [31, 35], "subclass": [31, 35], "although": [31, 35], "recip": [31, 35], "pass": [31, 35], "need": [31, 35], "afterward": [31, 35], "instead": [31, 35], "sinc": [31, 35], "former": [31, 35], "take": [31, 35], "care": [31, 35], "run": [31, 35], "regist": [31, 35], "hook": [31, 35], "latter": [31, 35], "silent": [31, 35], "inplan": 31, "plane": 31, "downsampl": 31, "basicblock": 32, "cl": 35, "alia": 35, "partialclass": 35, "cls_model": 40, "classificationwithcoordinatedoubl": [41, 54, 59], "saccpa_sample_ablation_a": [41, 54, 59], "saccpa_sample_ablation_ab": [41, 54, 59], "saccpa_sample_ablation_abc": [41, 54, 59], "saccpa_sample_ablation_network_structure_paramet": [41, 54, 59], "saccpa_sample_ablation_network_structure_parameters_atrous_attent": [41, 54, 59], "saccpa_sample_ablation_nul": [41, 54, 59], "produc": 56, "two": 56, "lightning_log": 56, "version_0": 56, "val_loss": 56, "ckpt": 56, "finetune_classif": 56, "after": 56, "download": 56}, "objects": {"": [[0, 0, 0, "-", "lib"], [41, 0, 0, "-", "models"]], "lib": [[1, 0, 0, "-", "modules"], [25, 0, 0, "-", "networks"], [37, 0, 0, "-", "procedures"]], "lib.modules": [[2, 0, 0, "-", "core"], [14, 0, 0, "-", "dataset"]], "lib.modules.core": [[3, 0, 0, "-", "SpatialArgmax2d"], [5, 0, 0, "-", "codec"], [8, 0, 0, "-", "function"], [9, 0, 0, "-", "inference"], [10, 0, 0, "-", "loss"], [11, 0, 0, "-", "rand"], [13, 0, 0, "-", "sampler"]], "lib.modules.core.SpatialArgmax2d": [[3, 1, 1, "", "HardArgmax2d"], [3, 1, 1, "", "SpatialSoftArgmax2d"]], "lib.modules.core.SpatialArgmax2d.HardArgmax2d": [[3, 2, 1, "", "forward"]], "lib.modules.core.SpatialArgmax2d.SpatialSoftArgmax2d": [[3, 2, 1, "", "create_meshgrid"], [3, 2, 1, "", "forward"]], "lib.modules.core.codec": [[6, 0, 0, "-", "heatmap_utils"], [7, 0, 0, "-", "msra_heatmap"]], "lib.modules.core.codec.heatmap_utils": [[6, 3, 1, "", "gaussian_blur"], [6, 3, 1, "", "generate_gaussian_heatmaps"], [6, 3, 1, "", "generate_unbiased_gaussian_heatmaps"], [6, 3, 1, "", "get_heatmap_maximum"], [6, 3, 1, "", "refine_keypoints"], [6, 3, 1, "", "refine_keypoints_dark"], [6, 3, 1, "", "refine_keypoints_dark_udp"]], "lib.modules.core.codec.msra_heatmap": [[7, 1, 1, "", "MSRAHeatmap"]], "lib.modules.core.codec.msra_heatmap.MSRAHeatmap": [[7, 2, 1, "", "decode"], [7, 2, 1, "", "encode"]], "lib.modules.core.function": [[8, 3, 1, "", "accuracy"], [8, 3, 1, "", "calc_dists"], [8, 3, 1, "", "dist_acc"]], "lib.modules.core.inference": [[9, 3, 1, "", "get_final_preds"], [9, 3, 1, "", "get_max_preds"]], "lib.modules.core.loss": [[10, 1, 1, "", "JointsMSELoss"]], "lib.modules.core.loss.JointsMSELoss": [[10, 2, 1, "", "forward"]], "lib.modules.core.rand": [[11, 3, 1, "", "log_normal"], [11, 3, 1, "", "log_uniform"], [11, 3, 1, "", "normal"], [11, 3, 1, "", "plot_rand_cdf"], [11, 3, 1, "", "plot_rand_cdfs"], [11, 3, 1, "", "power2_or_log_uniform"], [11, 3, 1, "", "power2_uniform"], [11, 3, 1, "", "quantize"], [11, 3, 1, "", "uniform"], [11, 3, 1, "", "validate_rand"]], "lib.modules.core.sampler": [[13, 3, 1, "", "check_complexity_constraints"], [13, 3, 1, "", "check_regnet_constraints"], [13, 3, 1, "", "generate_regnet"], [13, 3, 1, "", "generate_regnet_full"], [13, 3, 1, "", "regnet_sampler"], [13, 3, 1, "", "sample_cfgs"], [13, 3, 1, "", "sample_parameters"]], "lib.modules.dataset": [[15, 0, 0, "-", "JointsDataset"], [16, 0, 0, "-", "SQLJointsDataset"], [17, 0, 0, "-", "SQLJointsDatasetFlipCut"], [18, 0, 0, "-", "codec"], [21, 0, 0, "-", "common"], [22, 0, 0, "-", "dataset_generator"], [23, 0, 0, "-", "utils"]], "lib.modules.dataset.JointsDataset": [[15, 1, 1, "", "JointsDataset"]], "lib.modules.dataset.JointsDataset.JointsDataset": [[15, 2, 1, "", "calculate_random_scale_and"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "flip_joints"], [15, 2, 1, "", "generate_heatmap"], [15, 2, 1, "", "setup_config_constants"]], "lib.modules.dataset.SQLJointsDataset": [[16, 1, 1, "", "SQLJointsDataset"], [16, 3, 1, "", "random"]], "lib.modules.dataset.SQLJointsDataset.SQLJointsDataset": [[16, 4, 1, "", "DB_CONNECTION_STRING"], [16, 4, 1, "", "TABLE_NAME"], [16, 2, 1, "", "evaluate"]], "lib.modules.dataset.SQLJointsDatasetFlipCut": [[17, 1, 1, "", "SQLJointsDataset"], [17, 3, 1, "", "random"]], "lib.modules.dataset.SQLJointsDatasetFlipCut.SQLJointsDataset": [[17, 4, 1, "", "DB_CONNECTION_STRING"], [17, 4, 1, "", "TABLE_NAME"], [17, 2, 1, "", "evaluate"]], "lib.modules.dataset.common": [[21, 1, 1, "", "ResolveImage"], [21, 1, 1, "", "SQL_indexer"], [21, 3, 1, "", "fill_hole"]], "lib.modules.dataset.utils": [[24, 0, 0, "-", "transforms"]], "lib.modules.dataset.utils.transforms": [[24, 3, 1, "", "affine_transform"], [24, 3, 1, "", "crop"], [24, 3, 1, "", "flip_back"], [24, 3, 1, "", "fliplr_joints"], [24, 3, 1, "", "get_3rd_point"], [24, 3, 1, "", "get_affine_transform"], [24, 3, 1, "", "get_dir"], [24, 3, 1, "", "transform_preds"]], "lib.networks": [[26, 0, 0, "-", "SaccpaNet"], [27, 0, 0, "-", "SaccpaNetAblation"], [28, 0, 0, "-", "SaccpaNetAblationNetStructureParams"], [29, 0, 0, "-", "SaccpaNetAblationNetStructureParamsAtrousAttention"], [30, 0, 0, "-", "SaccpaRes"], [31, 0, 0, "-", "SaccpaResClip"], [32, 0, 0, "-", "eca"], [33, 0, 0, "-", "eca_module"], [34, 0, 0, "-", "parameter_init"], [35, 0, 0, "-", "vit"]], "lib.networks.SaccpaNet": [[26, 1, 1, "", "Block"], [26, 1, 1, "", "DWConv"], [26, 1, 1, "", "Hamburger"], [26, 1, 1, "", "LightHamHead"], [26, 1, 1, "", "Mlp"], [26, 1, 1, "", "NMF2D"], [26, 1, 1, "", "OverlapPatchEmbed"], [26, 1, 1, "", "SACCPA"], [26, 1, 1, "", "SaccpaNet"], [26, 1, 1, "", "SpatialAttention"], [26, 1, 1, "", "StemConv"], [26, 1, 1, "", "UAttention"], [26, 1, 1, "", "UAttentionLayer"], [26, 3, 1, "", "resize"]], "lib.networks.SaccpaNet.Block": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.DWConv": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.Hamburger": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.LightHamHead": [[26, 2, 1, "", "cls_seg"], [26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.Mlp": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.NMF2D": [[26, 2, 1, "", "compute_coef"], [26, 2, 1, "", "local_step"]], "lib.networks.SaccpaNet.OverlapPatchEmbed": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.SACCPA": [[26, 2, 1, "", "forward"], [26, 2, 1, "", "init_weights"]], "lib.networks.SaccpaNet.SaccpaNet": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.SpatialAttention": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.StemConv": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.UAttention": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNet.UAttentionLayer": [[26, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation": [[27, 1, 1, "", "Block"], [27, 1, 1, "", "DWConv"], [27, 1, 1, "", "Hamburger"], [27, 1, 1, "", "LightHamHead"], [27, 1, 1, "", "Mlp"], [27, 1, 1, "", "NMF2D"], [27, 1, 1, "", "OverlapPatchEmbed"], [27, 1, 1, "", "SACCPA"], [27, 1, 1, "", "SaccpaNet"], [27, 1, 1, "", "SpatialAttention"], [27, 1, 1, "", "StemConv"], [27, 1, 1, "", "UAttention"], [27, 1, 1, "", "UAttentionLayer"], [27, 3, 1, "", "resize"]], "lib.networks.SaccpaNetAblation.Block": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.DWConv": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.Hamburger": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.LightHamHead": [[27, 2, 1, "", "cls_seg"], [27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.Mlp": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.NMF2D": [[27, 2, 1, "", "compute_coef"], [27, 2, 1, "", "local_step"]], "lib.networks.SaccpaNetAblation.OverlapPatchEmbed": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.SACCPA": [[27, 2, 1, "", "forward"], [27, 2, 1, "", "init_weights"]], "lib.networks.SaccpaNetAblation.SaccpaNet": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.SpatialAttention": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.StemConv": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.UAttention": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblation.UAttentionLayer": [[27, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams": [[28, 1, 1, "", "Block"], [28, 1, 1, "", "DWConv"], [28, 1, 1, "", "Hamburger"], [28, 1, 1, "", "LightHamHead"], [28, 1, 1, "", "Mlp"], [28, 1, 1, "", "NMF2D"], [28, 1, 1, "", "OverlapPatchEmbed"], [28, 1, 1, "", "SACCPA"], [28, 1, 1, "", "SaccpaNet"], [28, 1, 1, "", "SpatialAttention"], [28, 1, 1, "", "StemConv"], [28, 1, 1, "", "UAttention"], [28, 1, 1, "", "UAttentionLayer"], [28, 3, 1, "", "resize"]], "lib.networks.SaccpaNetAblationNetStructureParams.Block": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.DWConv": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.Hamburger": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.LightHamHead": [[28, 2, 1, "", "cls_seg"], [28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.Mlp": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.NMF2D": [[28, 2, 1, "", "compute_coef"], [28, 2, 1, "", "local_step"]], "lib.networks.SaccpaNetAblationNetStructureParams.OverlapPatchEmbed": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.SACCPA": [[28, 2, 1, "", "forward"], [28, 2, 1, "", "init_weights"]], "lib.networks.SaccpaNetAblationNetStructureParams.SaccpaNet": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.SpatialAttention": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.StemConv": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.UAttention": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParams.UAttentionLayer": [[28, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention": [[29, 1, 1, "", "Block"], [29, 1, 1, "", "DWConv"], [29, 1, 1, "", "Hamburger"], [29, 1, 1, "", "LightHamHead"], [29, 1, 1, "", "Mlp"], [29, 1, 1, "", "NMF2D"], [29, 1, 1, "", "OverlapPatchEmbed"], [29, 1, 1, "", "SACCPA"], [29, 1, 1, "", "SaccpaNet"], [29, 1, 1, "", "SpatialAttention"], [29, 1, 1, "", "StemConv"], [29, 1, 1, "", "UAttention"], [29, 1, 1, "", "UAttentionLayer"], [29, 3, 1, "", "resize"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.Block": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.DWConv": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.Hamburger": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.LightHamHead": [[29, 2, 1, "", "cls_seg"], [29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.Mlp": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.NMF2D": [[29, 2, 1, "", "compute_coef"], [29, 2, 1, "", "local_step"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.OverlapPatchEmbed": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SACCPA": [[29, 2, 1, "", "forward"], [29, 2, 1, "", "init_weights"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SaccpaNet": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SpatialAttention": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.StemConv": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.UAttention": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.UAttentionLayer": [[29, 2, 1, "", "forward"]], "lib.networks.SaccpaRes": [[30, 1, 1, "", "ResNet"], [30, 1, 1, "", "SaccpaBasicBlock"], [30, 1, 1, "", "SaccpaBottleneck"], [30, 3, 1, "", "conv3x3"], [30, 3, 1, "", "saccpa_resnet101"], [30, 3, 1, "", "saccpa_resnet152"], [30, 3, 1, "", "saccpa_resnet18"], [30, 3, 1, "", "saccpa_resnet34"], [30, 3, 1, "", "saccpa_resnet50"]], "lib.networks.SaccpaRes.ResNet": [[30, 2, 1, "", "forward"]], "lib.networks.SaccpaRes.SaccpaBasicBlock": [[30, 4, 1, "", "expansion"], [30, 2, 1, "", "forward"]], "lib.networks.SaccpaRes.SaccpaBottleneck": [[30, 4, 1, "", "expansion"], [30, 2, 1, "", "forward"]], "lib.networks.SaccpaResClip": [[31, 1, 1, "", "ResNet"], [31, 1, 1, "", "SaccpaBasicBlock"], [31, 1, 1, "", "SaccpaBottleneck"], [31, 3, 1, "", "conv3x3"], [31, 3, 1, "", "saccpa_resnet101"], [31, 3, 1, "", "saccpa_resnet152"], [31, 3, 1, "", "saccpa_resnet18"], [31, 3, 1, "", "saccpa_resnet34"], [31, 3, 1, "", "saccpa_resnet50"]], "lib.networks.SaccpaResClip.ResNet": [[31, 2, 1, "", "forward"], [31, 4, 1, "", "training"]], "lib.networks.SaccpaResClip.SaccpaBasicBlock": [[31, 4, 1, "", "expansion"], [31, 2, 1, "", "forward"], [31, 4, 1, "", "training"]], "lib.networks.SaccpaResClip.SaccpaBottleneck": [[31, 4, 1, "", "expansion"], [31, 2, 1, "", "forward"], [31, 4, 1, "", "training"]], "lib.networks.eca": [[32, 1, 1, "", "ECABasicBlock"], [32, 1, 1, "", "ECABottleneck"], [32, 1, 1, "", "ResNet"], [32, 3, 1, "", "conv3x3"], [32, 3, 1, "", "eca_resnet101"], [32, 3, 1, "", "eca_resnet152"], [32, 3, 1, "", "eca_resnet18"], [32, 3, 1, "", "eca_resnet34"], [32, 3, 1, "", "eca_resnet50"]], "lib.networks.eca.ECABasicBlock": [[32, 4, 1, "", "expansion"], [32, 2, 1, "", "forward"]], "lib.networks.eca.ECABottleneck": [[32, 4, 1, "", "expansion"], [32, 2, 1, "", "forward"]], "lib.networks.eca.ResNet": [[32, 2, 1, "", "forward"]], "lib.networks.eca_module": [[33, 1, 1, "", "eca_layer"]], "lib.networks.eca_module.eca_layer": [[33, 2, 1, "", "forward"]], "lib.networks.parameter_init": [[34, 3, 1, "", "constant_init"], [34, 3, 1, "", "normal_init"], [34, 3, 1, "", "trunc_normal_"], [34, 3, 1, "", "trunc_normal_init"]], "lib.networks.vit": [[35, 1, 1, "", "ResizedTransformer"], [35, 3, 1, "", "partial_cls"], [35, 4, 1, "", "vit_b_16"], [35, 4, 1, "", "vit_b_32"], [35, 4, 1, "", "vit_h_14"], [35, 4, 1, "", "vit_l_16"], [35, 4, 1, "", "vit_l_32"]], "lib.networks.vit.ResizedTransformer": [[35, 2, 1, "", "forward"], [35, 4, 1, "", "training"]], "lib.procedures": [[38, 0, 0, "-", "dataloaders_procedure"], [39, 0, 0, "-", "evaluations"], [40, 0, 0, "-", "procedures"]], "lib.procedures.dataloaders_procedure": [[38, 3, 1, "", "create_dataloaders"], [38, 3, 1, "", "create_test_dataloader"], [38, 3, 1, "", "create_train_dataloader"], [38, 3, 1, "", "create_validation_dataloader"]], "lib.procedures.evaluations": [[39, 3, 1, "", "evaluate_cls"], [39, 3, 1, "", "inference_clasification_model"], [39, 3, 1, "", "inference_model_classification_coordinate"], [39, 3, 1, "", "save_auc"], [39, 3, 1, "", "save_roc"], [39, 3, 1, "", "update_log"], [39, 3, 1, "", "write"], [39, 3, 1, "", "write_log"]], "lib.procedures.procedures": [[40, 3, 1, "", "create_cls"], [40, 3, 1, "", "create_cls_kpt"], [40, 3, 1, "", "create_kpt"], [40, 3, 1, "", "load_cls_kpt"], [40, 3, 1, "", "load_cls_model"], [40, 3, 1, "", "load_pretrained_kpt"], [40, 3, 1, "", "train_and_evaluate"], [40, 3, 1, "", "train_model"]], "models": [[42, 0, 0, "-", "ClassificationBase"], [43, 0, 0, "-", "ClassificationWithCoordinate"], [44, 0, 0, "-", "ClassificationWithCoordinateDouble"], [45, 0, 0, "-", "RegressionBase"], [53, 0, 0, "-", "SACCPA_sample"], [46, 0, 0, "-", "SACCPA_sample_ablation_A"], [47, 0, 0, "-", "SACCPA_sample_ablation_AB"], [48, 0, 0, "-", "SACCPA_sample_ablation_ABC"], [49, 0, 0, "-", "SACCPA_sample_ablation_network_structure_parameters"], [50, 0, 0, "-", "SACCPA_sample_ablation_network_structure_parameters_atrous_attention"], [51, 0, 0, "-", "SACCPA_sample_ablation_null"], [52, 0, 0, "-", "hyperparameters"]], "models.ClassificationBase": [[42, 1, 1, "", "ClassificationModule"]], "models.ClassificationBase.ClassificationModule": [[42, 2, 1, "", "configure_optimizers"], [42, 2, 1, "", "forward"], [42, 2, 1, "", "get_batch_output"], [42, 2, 1, "", "loss_calculation"], [42, 2, 1, "", "test_step"], [42, 2, 1, "", "training_step"], [42, 2, 1, "", "validation_step"]], "models.ClassificationWithCoordinate": [[43, 1, 1, "", "MyLightningModule"]], "models.ClassificationWithCoordinate.MyLightningModule": [[43, 2, 1, "", "forward"]], "models.ClassificationWithCoordinateDouble": [[44, 1, 1, "", "MyLightningModule"]], "models.ClassificationWithCoordinateDouble.MyLightningModule": [[44, 2, 1, "", "forward"]], "models.RegressionBase": [[45, 1, 1, "", "RegressionModule"]], "models.RegressionBase.RegressionModule": [[45, 2, 1, "", "configure_optimizers"], [45, 2, 1, "", "forward"], [45, 2, 1, "", "get_batch_output"], [45, 2, 1, "", "loss_calculation"], [45, 2, 1, "", "test_step"], [45, 2, 1, "", "training_step"], [45, 2, 1, "", "validation_step"]], "models.SACCPA_sample": [[53, 1, 1, "", "MyLightningModule"]], "models.SACCPA_sample.MyLightningModule": [[53, 2, 1, "", "forward"]], "models.SACCPA_sample_ablation_A": [[46, 1, 1, "", "MyLightningModule"]], "models.SACCPA_sample_ablation_A.MyLightningModule": [[46, 2, 1, "", "forward"]], "models.SACCPA_sample_ablation_AB": [[47, 1, 1, "", "MyLightningModule"]], "models.SACCPA_sample_ablation_AB.MyLightningModule": [[47, 2, 1, "", "forward"]], "models.SACCPA_sample_ablation_ABC": [[48, 1, 1, "", "MyLightningModule"]], "models.SACCPA_sample_ablation_ABC.MyLightningModule": [[48, 2, 1, "", "forward"]], "models.SACCPA_sample_ablation_network_structure_parameters": [[49, 1, 1, "", "MyLightningModule"]], "models.SACCPA_sample_ablation_network_structure_parameters.MyLightningModule": [[49, 2, 1, "", "forward"]], "models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention": [[50, 1, 1, "", "MyLightningModule"]], "models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention.MyLightningModule": [[50, 2, 1, "", "forward"]], "models.SACCPA_sample_ablation_null": [[51, 1, 1, "", "MyLightningModule"]], "models.SACCPA_sample_ablation_null.MyLightningModule": [[51, 2, 1, "", "forward"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"lib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "packag": [0, 1, 2, 5, 14, 18, 23, 37, 41], "subpackag": [0, 1, 2, 14], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "core": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "submodul": [2, 5, 14, 18, 23, 25, 37, 41], "spatialsoftargmax2d": 4, "function": 8, "infer": 9, "loss": 10, "rand": 11, "sample_rang": 12, "sampler": 13, "dataset": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "jointsdataset": 15, "sqljointsdataset": 16, "codec": [5, 6, 7, 18, 19, 20], "heatmap_util": [6, 19], "msra_heatmap": [7, 20], "common": 21, "dataset_gener": 22, "util": [23, 24], "transform": 24, "network": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "namespac": 25, "saccpanet": 26, "saccpar": 30, "eca": 32, "eca_modul": 33, "parameter_init": 34, "procedur": [37, 38, 39, 40], "dataloaders_procedur": 38, "evalu": 39, "model": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56], "classificationbas": 42, "classificationwithcoordin": 43, "regressionbas": 45, "hyperparamet": 52, "saccpa_sampl": 53, "get": 55, "start": 55, "instal": 55, "relat": 55, "dependeci": 55, "us": 55, "window": 55, "conda": 55, "build": 55, "environ": 55, "from": 55, "scratch": 55, "pip": 55, "local": 55, "project": [55, 58], "depend": 55, "mmpose": 55, "addit": 55, "document": [55, 57], "experi": [56, 57], "list": 56, "1": 56, "random": 56, "search": 56, "run": 56, "aggreg": 56, "result": 56, "analysi": 56, "2": 56, "manual": 56, "rune": 56, "03": 56, "pretrain": 56, "04": 56, "weight": 56, "transfer": 56, "05": 56, "finetun": 56, "06": 56, "postur": [56, 57], "classif": 56, "welcom": 57, "": 57, "content": 57, "indic": 57, "tabl": 57, "organ": 58, "refer": 59, "index": 59, "librari": 59, "dependencei": 55, "test": 55, "spatialargmax2d": 3, "sqljointsdatasetflipcut": 17, "saccpanetabl": 27, "saccpanetablationnetstructureparam": 28, "saccpanetablationnetstructureparamsatrousattent": 29, "saccparesclip": 31, "vit": [35, 36], "pytorch": 36, "classificationwithcoordinatedoubl": 44, "saccpa_sample_ablation_a": 46, "saccpa_sample_ablation_ab": 47, "saccpa_sample_ablation_abc": 48, "saccpa_sample_ablation_network_structure_paramet": 49, "saccpa_sample_ablation_network_structure_parameters_atrous_attent": 50, "saccpa_sample_ablation_nul": 51}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"lib package": [[0, "module-lib"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [2, "subpackages"], [14, "subpackages"]], "lib.modules package": [[1, "module-lib.modules"]], "lib.modules.core.inference module": [[9, "module-lib.modules.core.inference"]], "lib.modules.core.loss module": [[10, "module-lib.modules.core.loss"]], "lib.modules.dataset.dataset_generator module": [[22, "module-lib.modules.dataset.dataset_generator"]], "Submodules": [[23, "submodules"], [2, "submodules"], [5, "submodules"], [14, "submodules"], [18, "submodules"], [25, "submodules"], [37, "submodules"], [41, "submodules"]], "lib.modules.dataset.utils package": [[23, "module-lib.modules.dataset.utils"]], "lib.modules.dataset.utils.transforms module": [[24, "module-lib.modules.dataset.utils.transforms"]], "lib.networks.eca_module module": [[33, "module-lib.networks.eca_module"]], "lib.networks.parameter_init module": [[34, "module-lib.networks.parameter_init"]], "Get started": [[55, "get-started"]], "Installing related dependecies": [[55, "installing-related-dependecies"]], "Using Windows with conda": [[55, "using-windows-with-conda"]], "Building the environment from scratch with conda and pip": [[55, "building-the-environment-from-scratch-with-conda-and-pip"]], "Install the local project": [[55, "install-the-local-project"]], "installing dependencies for mmpose": [[55, "installing-dependencies-for-mmpose"]], "Additional dependecies for building the documentation": [[55, "additional-dependecies-for-building-the-documentation"]], "Additional dependenceis for building tests": [[55, "additional-dependenceis-for-building-tests"]], "Welcome to Posture Experiment\u2019s documentation!": [[57, "welcome-to-posture-experiment-s-documentation"]], "Contents:": [[57, null]], "Indices and tables": [[57, "indices-and-tables"]], "Project organization": [[58, "project-organization"]], "Reference Index": [[59, "reference-index"]], "Library Reference:": [[59, null]], "lib.modules.core.rand module": [[11, "module-lib.modules.core.rand"]], "models.hyperparameters module": [[52, "module-models.hyperparameters"]], "lib.modules.core package": [[2, "module-lib.modules.core"]], "lib.modules.core.SpatialArgmax2d module": [[3, "module-lib.modules.core.SpatialArgmax2d"]], "lib.modules.core.SpatialSoftArgmax2d module": [[4, "lib-modules-core-spatialsoftargmax2d-module"]], "lib.modules.core.codec package": [[5, "module-lib.modules.core.codec"]], "lib.modules.core.codec.heatmap_utils module": [[6, "module-lib.modules.core.codec.heatmap_utils"]], "lib.modules.core.codec.msra_heatmap module": [[7, "module-lib.modules.core.codec.msra_heatmap"]], "lib.modules.core.function module": [[8, "module-lib.modules.core.function"]], "lib.modules.core.sample_range module": [[12, "lib-modules-core-sample-range-module"]], "lib.modules.core.sampler module": [[13, "module-lib.modules.core.sampler"]], "lib.modules.dataset package": [[14, "module-lib.modules.dataset"]], "lib.modules.dataset.JointsDataset module": [[15, "module-lib.modules.dataset.JointsDataset"]], "lib.modules.dataset.SQLJointsDataset module": [[16, "module-lib.modules.dataset.SQLJointsDataset"]], "lib.modules.dataset.SQLJointsDatasetFlipCut module": [[17, "module-lib.modules.dataset.SQLJointsDatasetFlipCut"]], "lib.modules.dataset.codec package": [[18, "module-lib.modules.dataset.codec"]], "lib.modules.dataset.codec.heatmap_utils module": [[19, "lib-modules-dataset-codec-heatmap-utils-module"]], "lib.modules.dataset.codec.msra_heatmap module": [[20, "lib-modules-dataset-codec-msra-heatmap-module"]], "lib.modules.dataset.common module": [[21, "module-lib.modules.dataset.common"]], "lib.networks namespace": [[25, "module-lib.networks"]], "lib.networks.SaccpaNet module": [[26, "module-lib.networks.SaccpaNet"]], "lib.networks.SaccpaNetAblation module": [[27, "module-lib.networks.SaccpaNetAblation"]], "lib.networks.SaccpaNetAblationNetStructureParams module": [[28, "module-lib.networks.SaccpaNetAblationNetStructureParams"]], "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention module": [[29, "module-lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention"]], "lib.networks.SaccpaRes module": [[30, "module-lib.networks.SaccpaRes"]], "lib.networks.SaccpaResClip module": [[31, "module-lib.networks.SaccpaResClip"]], "lib.networks.eca module": [[32, "module-lib.networks.eca"]], "lib.networks.vit module": [[35, "module-lib.networks.vit"]], "lib.networks.vit-pytorch module": [[36, "lib-networks-vit-pytorch-module"]], "lib.procedures package": [[37, "module-lib.procedures"]], "lib.procedures.dataloaders_procedure module": [[38, "module-lib.procedures.dataloaders_procedure"]], "lib.procedures.evaluations module": [[39, "module-lib.procedures.evaluations"]], "lib.procedures.procedures module": [[40, "module-lib.procedures.procedures"]], "models package": [[41, "module-models"]], "models.ClassificationBase module": [[42, "module-models.ClassificationBase"]], "models.ClassificationWithCoordinate module": [[43, "module-models.ClassificationWithCoordinate"]], "models.ClassificationWithCoordinateDouble module": [[44, "module-models.ClassificationWithCoordinateDouble"]], "models.RegressionBase module": [[45, "module-models.RegressionBase"]], "models.SACCPA_sample_ablation_A module": [[46, "module-models.SACCPA_sample_ablation_A"]], "models.SACCPA_sample_ablation_AB module": [[47, "module-models.SACCPA_sample_ablation_AB"]], "models.SACCPA_sample_ablation_ABC module": [[48, "module-models.SACCPA_sample_ablation_ABC"]], "models.SACCPA_sample_ablation_network_structure_parameters module": [[49, "module-models.SACCPA_sample_ablation_network_structure_parameters"]], "models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention module": [[50, "module-models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention"]], "models.SACCPA_sample_ablation_null module": [[51, "module-models.SACCPA_sample_ablation_null"]], "models.SACCPA_sample module": [[53, "module-models.SACCPA_sample"]], "models": [[54, "models"]], "Experiments": [[56, "experiments"]], "List of experiments": [[56, "list-of-experiments"]], "1. Random Search": [[56, "random-search"]], "Running the search": [[56, "running-the-search"]], "Aggregating the results": [[56, "aggregating-the-results"]], "Analysis of the result": [[56, "analysis-of-the-result"]], "2. Manual searching": [[56, "manual-searching"]], "Runing the models": [[56, "runing-the-models"]], "Aggregating the results of manual search": [[56, "aggregating-the-results-of-manual-search"]], "Analysis": [[56, "analysis"]], "03. Pretraining": [[56, "pretraining"]], "04. Weight transfer": [[56, "weight-transfer"]], "05. Finetuning": [[56, "finetuning"]], "06. Posture Classification": [[56, "posture-classification"]]}, "indexentries": {"lib": [[0, "module-lib"]], "module": [[0, "module-lib"], [1, "module-lib.modules"], [2, "module-lib.modules.core"], [3, "module-lib.modules.core.SpatialArgmax2d"], [5, "module-lib.modules.core.codec"], [6, "module-lib.modules.core.codec.heatmap_utils"], [7, "module-lib.modules.core.codec.msra_heatmap"], [8, "module-lib.modules.core.function"], [13, "module-lib.modules.core.sampler"], [14, "module-lib.modules.dataset"], [15, "module-lib.modules.dataset.JointsDataset"], [16, "module-lib.modules.dataset.SQLJointsDataset"], [17, "module-lib.modules.dataset.SQLJointsDatasetFlipCut"], [18, "module-lib.modules.dataset.codec"], [21, "module-lib.modules.dataset.common"], [25, "module-lib.networks"], [26, "module-lib.networks.SaccpaNet"], [27, "module-lib.networks.SaccpaNetAblation"], [28, "module-lib.networks.SaccpaNetAblationNetStructureParams"], [29, "module-lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention"], [30, "module-lib.networks.SaccpaRes"], [31, "module-lib.networks.SaccpaResClip"], [32, "module-lib.networks.eca"], [35, "module-lib.networks.vit"], [37, "module-lib.procedures"], [38, "module-lib.procedures.dataloaders_procedure"], [39, "module-lib.procedures.evaluations"], [40, "module-lib.procedures.procedures"], [41, "module-models"], [42, "module-models.ClassificationBase"], [43, "module-models.ClassificationWithCoordinate"], [44, "module-models.ClassificationWithCoordinateDouble"], [45, "module-models.RegressionBase"], [46, "module-models.SACCPA_sample_ablation_A"], [47, "module-models.SACCPA_sample_ablation_AB"], [48, "module-models.SACCPA_sample_ablation_ABC"], [49, "module-models.SACCPA_sample_ablation_network_structure_parameters"], [50, "module-models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention"], [51, "module-models.SACCPA_sample_ablation_null"], [53, "module-models.SACCPA_sample"]], "lib.modules": [[1, "module-lib.modules"]], "lib.modules.core": [[2, "module-lib.modules.core"]], "hardargmax2d (class in lib.modules.core.spatialargmax2d)": [[3, "lib.modules.core.SpatialArgmax2d.HardArgmax2d"]], "spatialsoftargmax2d (class in lib.modules.core.spatialargmax2d)": [[3, "lib.modules.core.SpatialArgmax2d.SpatialSoftArgmax2d"]], "create_meshgrid() (lib.modules.core.spatialargmax2d.spatialsoftargmax2d method)": [[3, "lib.modules.core.SpatialArgmax2d.SpatialSoftArgmax2d.create_meshgrid"]], "forward() (lib.modules.core.spatialargmax2d.hardargmax2d method)": [[3, "lib.modules.core.SpatialArgmax2d.HardArgmax2d.forward"]], "forward() (lib.modules.core.spatialargmax2d.spatialsoftargmax2d method)": [[3, "lib.modules.core.SpatialArgmax2d.SpatialSoftArgmax2d.forward"]], "lib.modules.core.spatialargmax2d": [[3, "module-lib.modules.core.SpatialArgmax2d"]], "lib.modules.core.codec": [[5, "module-lib.modules.core.codec"]], "gaussian_blur() (in module lib.modules.core.codec.heatmap_utils)": [[6, "lib.modules.core.codec.heatmap_utils.gaussian_blur"]], "generate_gaussian_heatmaps() (in module lib.modules.core.codec.heatmap_utils)": [[6, "lib.modules.core.codec.heatmap_utils.generate_gaussian_heatmaps"]], "generate_unbiased_gaussian_heatmaps() (in module lib.modules.core.codec.heatmap_utils)": [[6, "lib.modules.core.codec.heatmap_utils.generate_unbiased_gaussian_heatmaps"]], "get_heatmap_maximum() (in module lib.modules.core.codec.heatmap_utils)": [[6, "lib.modules.core.codec.heatmap_utils.get_heatmap_maximum"]], "lib.modules.core.codec.heatmap_utils": [[6, "module-lib.modules.core.codec.heatmap_utils"]], "refine_keypoints() (in module lib.modules.core.codec.heatmap_utils)": [[6, "lib.modules.core.codec.heatmap_utils.refine_keypoints"]], "refine_keypoints_dark() (in module lib.modules.core.codec.heatmap_utils)": [[6, "lib.modules.core.codec.heatmap_utils.refine_keypoints_dark"]], "refine_keypoints_dark_udp() (in module lib.modules.core.codec.heatmap_utils)": [[6, "lib.modules.core.codec.heatmap_utils.refine_keypoints_dark_udp"]], "msraheatmap (class in lib.modules.core.codec.msra_heatmap)": [[7, "lib.modules.core.codec.msra_heatmap.MSRAHeatmap"]], "decode() (lib.modules.core.codec.msra_heatmap.msraheatmap method)": [[7, "lib.modules.core.codec.msra_heatmap.MSRAHeatmap.decode"]], "encode() (lib.modules.core.codec.msra_heatmap.msraheatmap method)": [[7, "lib.modules.core.codec.msra_heatmap.MSRAHeatmap.encode"]], "lib.modules.core.codec.msra_heatmap": [[7, "module-lib.modules.core.codec.msra_heatmap"]], "accuracy() (in module lib.modules.core.function)": [[8, "lib.modules.core.function.accuracy"]], "calc_dists() (in module lib.modules.core.function)": [[8, "lib.modules.core.function.calc_dists"]], "dist_acc() (in module lib.modules.core.function)": [[8, "lib.modules.core.function.dist_acc"]], "lib.modules.core.function": [[8, "module-lib.modules.core.function"]], "check_complexity_constraints() (in module lib.modules.core.sampler)": [[13, "lib.modules.core.sampler.check_complexity_constraints"]], "check_regnet_constraints() (in module lib.modules.core.sampler)": [[13, "lib.modules.core.sampler.check_regnet_constraints"]], "generate_regnet() (in module lib.modules.core.sampler)": [[13, "lib.modules.core.sampler.generate_regnet"]], "generate_regnet_full() (in module lib.modules.core.sampler)": [[13, "lib.modules.core.sampler.generate_regnet_full"]], "lib.modules.core.sampler": [[13, "module-lib.modules.core.sampler"]], "regnet_sampler() (in module lib.modules.core.sampler)": [[13, "lib.modules.core.sampler.regnet_sampler"]], "sample_cfgs() (in module lib.modules.core.sampler)": [[13, "lib.modules.core.sampler.sample_cfgs"]], "sample_parameters() (in module lib.modules.core.sampler)": [[13, "lib.modules.core.sampler.sample_parameters"]], "lib.modules.dataset": [[14, "module-lib.modules.dataset"]], "jointsdataset (class in lib.modules.dataset.jointsdataset)": [[15, "lib.modules.dataset.JointsDataset.JointsDataset"]], "calculate_random_scale_and() (lib.modules.dataset.jointsdataset.jointsdataset method)": [[15, "lib.modules.dataset.JointsDataset.JointsDataset.calculate_random_scale_and"]], "evaluate() (lib.modules.dataset.jointsdataset.jointsdataset method)": [[15, "lib.modules.dataset.JointsDataset.JointsDataset.evaluate"]], "flip_joints() (lib.modules.dataset.jointsdataset.jointsdataset method)": [[15, "lib.modules.dataset.JointsDataset.JointsDataset.flip_joints"]], "generate_heatmap() (lib.modules.dataset.jointsdataset.jointsdataset method)": [[15, "lib.modules.dataset.JointsDataset.JointsDataset.generate_heatmap"]], "lib.modules.dataset.jointsdataset": [[15, "module-lib.modules.dataset.JointsDataset"]], "setup_config_constants() (lib.modules.dataset.jointsdataset.jointsdataset method)": [[15, "lib.modules.dataset.JointsDataset.JointsDataset.setup_config_constants"]], "db_connection_string (lib.modules.dataset.sqljointsdataset.sqljointsdataset attribute)": [[16, "lib.modules.dataset.SQLJointsDataset.SQLJointsDataset.DB_CONNECTION_STRING"]], "sqljointsdataset (class in lib.modules.dataset.sqljointsdataset)": [[16, "lib.modules.dataset.SQLJointsDataset.SQLJointsDataset"]], "table_name (lib.modules.dataset.sqljointsdataset.sqljointsdataset attribute)": [[16, "lib.modules.dataset.SQLJointsDataset.SQLJointsDataset.TABLE_NAME"]], "evaluate() (lib.modules.dataset.sqljointsdataset.sqljointsdataset method)": [[16, "lib.modules.dataset.SQLJointsDataset.SQLJointsDataset.evaluate"]], "lib.modules.dataset.sqljointsdataset": [[16, "module-lib.modules.dataset.SQLJointsDataset"]], "random() (in module lib.modules.dataset.sqljointsdataset)": [[16, "lib.modules.dataset.SQLJointsDataset.random"]], "db_connection_string (lib.modules.dataset.sqljointsdatasetflipcut.sqljointsdataset attribute)": [[17, "lib.modules.dataset.SQLJointsDatasetFlipCut.SQLJointsDataset.DB_CONNECTION_STRING"]], "sqljointsdataset (class in lib.modules.dataset.sqljointsdatasetflipcut)": [[17, "lib.modules.dataset.SQLJointsDatasetFlipCut.SQLJointsDataset"]], "table_name (lib.modules.dataset.sqljointsdatasetflipcut.sqljointsdataset attribute)": [[17, "lib.modules.dataset.SQLJointsDatasetFlipCut.SQLJointsDataset.TABLE_NAME"]], "evaluate() (lib.modules.dataset.sqljointsdatasetflipcut.sqljointsdataset method)": [[17, "lib.modules.dataset.SQLJointsDatasetFlipCut.SQLJointsDataset.evaluate"]], "lib.modules.dataset.sqljointsdatasetflipcut": [[17, "module-lib.modules.dataset.SQLJointsDatasetFlipCut"]], "random() (in module lib.modules.dataset.sqljointsdatasetflipcut)": [[17, "lib.modules.dataset.SQLJointsDatasetFlipCut.random"]], "lib.modules.dataset.codec": [[18, "module-lib.modules.dataset.codec"]], "resolveimage (class in lib.modules.dataset.common)": [[21, "lib.modules.dataset.common.ResolveImage"]], "sql_indexer (class in lib.modules.dataset.common)": [[21, "lib.modules.dataset.common.SQL_indexer"]], "fill_hole() (in module lib.modules.dataset.common)": [[21, "lib.modules.dataset.common.fill_hole"]], "lib.modules.dataset.common": [[21, "module-lib.modules.dataset.common"]], "lib.networks": [[25, "module-lib.networks"]], "block (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.Block"]], "dwconv (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.DWConv"]], "hamburger (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.Hamburger"]], "lighthamhead (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.LightHamHead"]], "mlp (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.Mlp"]], "nmf2d (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.NMF2D"]], "overlappatchembed (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.OverlapPatchEmbed"]], "saccpa (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.SACCPA"]], "saccpanet (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.SaccpaNet"]], "spatialattention (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.SpatialAttention"]], "stemconv (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.StemConv"]], "uattention (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.UAttention"]], "uattentionlayer (class in lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.UAttentionLayer"]], "cls_seg() (lib.networks.saccpanet.lighthamhead method)": [[26, "lib.networks.SaccpaNet.LightHamHead.cls_seg"]], "compute_coef() (lib.networks.saccpanet.nmf2d method)": [[26, "lib.networks.SaccpaNet.NMF2D.compute_coef"]], "forward() (lib.networks.saccpanet.block method)": [[26, "lib.networks.SaccpaNet.Block.forward"]], "forward() (lib.networks.saccpanet.dwconv method)": [[26, "lib.networks.SaccpaNet.DWConv.forward"]], "forward() (lib.networks.saccpanet.hamburger method)": [[26, "lib.networks.SaccpaNet.Hamburger.forward"]], "forward() (lib.networks.saccpanet.lighthamhead method)": [[26, "lib.networks.SaccpaNet.LightHamHead.forward"]], "forward() (lib.networks.saccpanet.mlp method)": [[26, "lib.networks.SaccpaNet.Mlp.forward"]], "forward() (lib.networks.saccpanet.overlappatchembed method)": [[26, "lib.networks.SaccpaNet.OverlapPatchEmbed.forward"]], "forward() (lib.networks.saccpanet.saccpa method)": [[26, "lib.networks.SaccpaNet.SACCPA.forward"]], "forward() (lib.networks.saccpanet.saccpanet method)": [[26, "lib.networks.SaccpaNet.SaccpaNet.forward"]], "forward() (lib.networks.saccpanet.spatialattention method)": [[26, "lib.networks.SaccpaNet.SpatialAttention.forward"]], "forward() (lib.networks.saccpanet.stemconv method)": [[26, "lib.networks.SaccpaNet.StemConv.forward"]], "forward() (lib.networks.saccpanet.uattention method)": [[26, "lib.networks.SaccpaNet.UAttention.forward"]], "forward() (lib.networks.saccpanet.uattentionlayer method)": [[26, "lib.networks.SaccpaNet.UAttentionLayer.forward"]], "init_weights() (lib.networks.saccpanet.saccpa method)": [[26, "lib.networks.SaccpaNet.SACCPA.init_weights"]], "lib.networks.saccpanet": [[26, "module-lib.networks.SaccpaNet"]], "local_step() (lib.networks.saccpanet.nmf2d method)": [[26, "lib.networks.SaccpaNet.NMF2D.local_step"]], "resize() (in module lib.networks.saccpanet)": [[26, "lib.networks.SaccpaNet.resize"]], "block (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.Block"]], "dwconv (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.DWConv"]], "hamburger (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.Hamburger"]], "lighthamhead (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.LightHamHead"]], "mlp (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.Mlp"]], "nmf2d (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.NMF2D"]], "overlappatchembed (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.OverlapPatchEmbed"]], "saccpa (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.SACCPA"]], "saccpanet (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.SaccpaNet"]], "spatialattention (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.SpatialAttention"]], "stemconv (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.StemConv"]], "uattention (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.UAttention"]], "uattentionlayer (class in lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.UAttentionLayer"]], "cls_seg() (lib.networks.saccpanetablation.lighthamhead method)": [[27, "lib.networks.SaccpaNetAblation.LightHamHead.cls_seg"]], "compute_coef() (lib.networks.saccpanetablation.nmf2d method)": [[27, "lib.networks.SaccpaNetAblation.NMF2D.compute_coef"]], "forward() (lib.networks.saccpanetablation.block method)": [[27, "lib.networks.SaccpaNetAblation.Block.forward"]], "forward() (lib.networks.saccpanetablation.dwconv method)": [[27, "lib.networks.SaccpaNetAblation.DWConv.forward"]], "forward() (lib.networks.saccpanetablation.hamburger method)": [[27, "lib.networks.SaccpaNetAblation.Hamburger.forward"]], "forward() (lib.networks.saccpanetablation.lighthamhead method)": [[27, "lib.networks.SaccpaNetAblation.LightHamHead.forward"]], "forward() (lib.networks.saccpanetablation.mlp method)": [[27, "lib.networks.SaccpaNetAblation.Mlp.forward"]], "forward() (lib.networks.saccpanetablation.overlappatchembed method)": [[27, "lib.networks.SaccpaNetAblation.OverlapPatchEmbed.forward"]], "forward() (lib.networks.saccpanetablation.saccpa method)": [[27, "lib.networks.SaccpaNetAblation.SACCPA.forward"]], "forward() (lib.networks.saccpanetablation.saccpanet method)": [[27, "lib.networks.SaccpaNetAblation.SaccpaNet.forward"]], "forward() (lib.networks.saccpanetablation.spatialattention method)": [[27, "lib.networks.SaccpaNetAblation.SpatialAttention.forward"]], "forward() (lib.networks.saccpanetablation.stemconv method)": [[27, "lib.networks.SaccpaNetAblation.StemConv.forward"]], "forward() (lib.networks.saccpanetablation.uattention method)": [[27, "lib.networks.SaccpaNetAblation.UAttention.forward"]], "forward() (lib.networks.saccpanetablation.uattentionlayer method)": [[27, "lib.networks.SaccpaNetAblation.UAttentionLayer.forward"]], "init_weights() (lib.networks.saccpanetablation.saccpa method)": [[27, "lib.networks.SaccpaNetAblation.SACCPA.init_weights"]], "lib.networks.saccpanetablation": [[27, "module-lib.networks.SaccpaNetAblation"]], "local_step() (lib.networks.saccpanetablation.nmf2d method)": [[27, "lib.networks.SaccpaNetAblation.NMF2D.local_step"]], "resize() (in module lib.networks.saccpanetablation)": [[27, "lib.networks.SaccpaNetAblation.resize"]], "block (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.Block"]], "dwconv (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.DWConv"]], "hamburger (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.Hamburger"]], "lighthamhead (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.LightHamHead"]], "mlp (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.Mlp"]], "nmf2d (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.NMF2D"]], "overlappatchembed (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.OverlapPatchEmbed"]], "saccpa (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.SACCPA"]], "saccpanet (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.SaccpaNet"]], "spatialattention (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.SpatialAttention"]], "stemconv (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.StemConv"]], "uattention (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.UAttention"]], "uattentionlayer (class in lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.UAttentionLayer"]], "cls_seg() (lib.networks.saccpanetablationnetstructureparams.lighthamhead method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.LightHamHead.cls_seg"]], "compute_coef() (lib.networks.saccpanetablationnetstructureparams.nmf2d method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.NMF2D.compute_coef"]], "forward() (lib.networks.saccpanetablationnetstructureparams.block method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.Block.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.dwconv method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.DWConv.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.hamburger method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.Hamburger.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.lighthamhead method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.LightHamHead.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.mlp method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.Mlp.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.overlappatchembed method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.OverlapPatchEmbed.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.saccpa method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.SACCPA.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.saccpanet method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.SaccpaNet.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.spatialattention method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.SpatialAttention.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.stemconv method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.StemConv.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.uattention method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.UAttention.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparams.uattentionlayer method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.UAttentionLayer.forward"]], "init_weights() (lib.networks.saccpanetablationnetstructureparams.saccpa method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.SACCPA.init_weights"]], "lib.networks.saccpanetablationnetstructureparams": [[28, "module-lib.networks.SaccpaNetAblationNetStructureParams"]], "local_step() (lib.networks.saccpanetablationnetstructureparams.nmf2d method)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.NMF2D.local_step"]], "resize() (in module lib.networks.saccpanetablationnetstructureparams)": [[28, "lib.networks.SaccpaNetAblationNetStructureParams.resize"]], "block (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.Block"]], "dwconv (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.DWConv"]], "hamburger (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.Hamburger"]], "lighthamhead (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.LightHamHead"]], "mlp (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.Mlp"]], "nmf2d (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.NMF2D"]], "overlappatchembed (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.OverlapPatchEmbed"]], "saccpa (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SACCPA"]], "saccpanet (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SaccpaNet"]], "spatialattention (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SpatialAttention"]], "stemconv (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.StemConv"]], "uattention (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.UAttention"]], "uattentionlayer (class in lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.UAttentionLayer"]], "cls_seg() (lib.networks.saccpanetablationnetstructureparamsatrousattention.lighthamhead method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.LightHamHead.cls_seg"]], "compute_coef() (lib.networks.saccpanetablationnetstructureparamsatrousattention.nmf2d method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.NMF2D.compute_coef"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.block method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.Block.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.dwconv method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.DWConv.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.hamburger method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.Hamburger.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.lighthamhead method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.LightHamHead.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.mlp method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.Mlp.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.overlappatchembed method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.OverlapPatchEmbed.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.saccpa method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SACCPA.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.saccpanet method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SaccpaNet.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.spatialattention method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SpatialAttention.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.stemconv method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.StemConv.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.uattention method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.UAttention.forward"]], "forward() (lib.networks.saccpanetablationnetstructureparamsatrousattention.uattentionlayer method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.UAttentionLayer.forward"]], "init_weights() (lib.networks.saccpanetablationnetstructureparamsatrousattention.saccpa method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.SACCPA.init_weights"]], "lib.networks.saccpanetablationnetstructureparamsatrousattention": [[29, "module-lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention"]], "local_step() (lib.networks.saccpanetablationnetstructureparamsatrousattention.nmf2d method)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.NMF2D.local_step"]], "resize() (in module lib.networks.saccpanetablationnetstructureparamsatrousattention)": [[29, "lib.networks.SaccpaNetAblationNetStructureParamsAtrousAttention.resize"]], "resnet (class in lib.networks.saccpares)": [[30, "lib.networks.SaccpaRes.ResNet"]], "saccpabasicblock (class in lib.networks.saccpares)": [[30, "lib.networks.SaccpaRes.SaccpaBasicBlock"]], "saccpabottleneck (class in lib.networks.saccpares)": [[30, "lib.networks.SaccpaRes.SaccpaBottleneck"]], "conv3x3() (in module lib.networks.saccpares)": [[30, "lib.networks.SaccpaRes.conv3x3"]], "expansion (lib.networks.saccpares.saccpabasicblock attribute)": [[30, "lib.networks.SaccpaRes.SaccpaBasicBlock.expansion"]], "expansion (lib.networks.saccpares.saccpabottleneck attribute)": [[30, "lib.networks.SaccpaRes.SaccpaBottleneck.expansion"]], "forward() (lib.networks.saccpares.resnet method)": [[30, "lib.networks.SaccpaRes.ResNet.forward"]], "forward() (lib.networks.saccpares.saccpabasicblock method)": [[30, "lib.networks.SaccpaRes.SaccpaBasicBlock.forward"]], "forward() (lib.networks.saccpares.saccpabottleneck method)": [[30, "lib.networks.SaccpaRes.SaccpaBottleneck.forward"]], "lib.networks.saccpares": [[30, "module-lib.networks.SaccpaRes"]], "saccpa_resnet101() (in module lib.networks.saccpares)": [[30, "lib.networks.SaccpaRes.saccpa_resnet101"]], "saccpa_resnet152() (in module lib.networks.saccpares)": [[30, "lib.networks.SaccpaRes.saccpa_resnet152"]], "saccpa_resnet18() (in module lib.networks.saccpares)": [[30, "lib.networks.SaccpaRes.saccpa_resnet18"]], "saccpa_resnet34() (in module lib.networks.saccpares)": [[30, "lib.networks.SaccpaRes.saccpa_resnet34"]], "saccpa_resnet50() (in module lib.networks.saccpares)": [[30, "lib.networks.SaccpaRes.saccpa_resnet50"]], "resnet (class in lib.networks.saccparesclip)": [[31, "lib.networks.SaccpaResClip.ResNet"]], "saccpabasicblock (class in lib.networks.saccparesclip)": [[31, "lib.networks.SaccpaResClip.SaccpaBasicBlock"]], "saccpabottleneck (class in lib.networks.saccparesclip)": [[31, "lib.networks.SaccpaResClip.SaccpaBottleneck"]], "conv3x3() (in module lib.networks.saccparesclip)": [[31, "lib.networks.SaccpaResClip.conv3x3"]], "expansion (lib.networks.saccparesclip.saccpabasicblock attribute)": [[31, "lib.networks.SaccpaResClip.SaccpaBasicBlock.expansion"]], "expansion (lib.networks.saccparesclip.saccpabottleneck attribute)": [[31, "lib.networks.SaccpaResClip.SaccpaBottleneck.expansion"]], "forward() (lib.networks.saccparesclip.resnet method)": [[31, "lib.networks.SaccpaResClip.ResNet.forward"]], "forward() (lib.networks.saccparesclip.saccpabasicblock method)": [[31, "lib.networks.SaccpaResClip.SaccpaBasicBlock.forward"]], "forward() (lib.networks.saccparesclip.saccpabottleneck method)": [[31, "lib.networks.SaccpaResClip.SaccpaBottleneck.forward"]], "lib.networks.saccparesclip": [[31, "module-lib.networks.SaccpaResClip"]], "saccpa_resnet101() (in module lib.networks.saccparesclip)": [[31, "lib.networks.SaccpaResClip.saccpa_resnet101"]], "saccpa_resnet152() (in module lib.networks.saccparesclip)": [[31, "lib.networks.SaccpaResClip.saccpa_resnet152"]], "saccpa_resnet18() (in module lib.networks.saccparesclip)": [[31, "lib.networks.SaccpaResClip.saccpa_resnet18"]], "saccpa_resnet34() (in module lib.networks.saccparesclip)": [[31, "lib.networks.SaccpaResClip.saccpa_resnet34"]], "saccpa_resnet50() (in module lib.networks.saccparesclip)": [[31, "lib.networks.SaccpaResClip.saccpa_resnet50"]], "training (lib.networks.saccparesclip.resnet attribute)": [[31, "lib.networks.SaccpaResClip.ResNet.training"]], "training (lib.networks.saccparesclip.saccpabasicblock attribute)": [[31, "lib.networks.SaccpaResClip.SaccpaBasicBlock.training"]], "training (lib.networks.saccparesclip.saccpabottleneck attribute)": [[31, "lib.networks.SaccpaResClip.SaccpaBottleneck.training"]], "ecabasicblock (class in lib.networks.eca)": [[32, "lib.networks.eca.ECABasicBlock"]], "ecabottleneck (class in lib.networks.eca)": [[32, "lib.networks.eca.ECABottleneck"]], "resnet (class in lib.networks.eca)": [[32, "lib.networks.eca.ResNet"]], "conv3x3() (in module lib.networks.eca)": [[32, "lib.networks.eca.conv3x3"]], "eca_resnet101() (in module lib.networks.eca)": [[32, "lib.networks.eca.eca_resnet101"]], "eca_resnet152() (in module lib.networks.eca)": [[32, "lib.networks.eca.eca_resnet152"]], "eca_resnet18() (in module lib.networks.eca)": [[32, "lib.networks.eca.eca_resnet18"]], "eca_resnet34() (in module lib.networks.eca)": [[32, "lib.networks.eca.eca_resnet34"]], "eca_resnet50() (in module lib.networks.eca)": [[32, "lib.networks.eca.eca_resnet50"]], "expansion (lib.networks.eca.ecabasicblock attribute)": [[32, "lib.networks.eca.ECABasicBlock.expansion"]], "expansion (lib.networks.eca.ecabottleneck attribute)": [[32, "lib.networks.eca.ECABottleneck.expansion"]], "forward() (lib.networks.eca.ecabasicblock method)": [[32, "lib.networks.eca.ECABasicBlock.forward"]], "forward() (lib.networks.eca.ecabottleneck method)": [[32, "lib.networks.eca.ECABottleneck.forward"]], "forward() (lib.networks.eca.resnet method)": [[32, "lib.networks.eca.ResNet.forward"]], "lib.networks.eca": [[32, "module-lib.networks.eca"]], "resizedtransformer (class in lib.networks.vit)": [[35, "lib.networks.vit.ResizedTransformer"]], "forward() (lib.networks.vit.resizedtransformer method)": [[35, "lib.networks.vit.ResizedTransformer.forward"]], "lib.networks.vit": [[35, "module-lib.networks.vit"]], "partial_cls() (in module lib.networks.vit)": [[35, "lib.networks.vit.partial_cls"]], "training (lib.networks.vit.resizedtransformer attribute)": [[35, "lib.networks.vit.ResizedTransformer.training"]], "vit_b_16 (in module lib.networks.vit)": [[35, "lib.networks.vit.vit_b_16"]], "vit_b_32 (in module lib.networks.vit)": [[35, "lib.networks.vit.vit_b_32"]], "vit_h_14 (in module lib.networks.vit)": [[35, "lib.networks.vit.vit_h_14"]], "vit_l_16 (in module lib.networks.vit)": [[35, "lib.networks.vit.vit_l_16"]], "vit_l_32 (in module lib.networks.vit)": [[35, "lib.networks.vit.vit_l_32"]], "lib.procedures": [[37, "module-lib.procedures"]], "create_dataloaders() (in module lib.procedures.dataloaders_procedure)": [[38, "lib.procedures.dataloaders_procedure.create_dataloaders"]], "create_test_dataloader() (in module lib.procedures.dataloaders_procedure)": [[38, "lib.procedures.dataloaders_procedure.create_test_dataloader"]], "create_train_dataloader() (in module lib.procedures.dataloaders_procedure)": [[38, "lib.procedures.dataloaders_procedure.create_train_dataloader"]], "create_validation_dataloader() (in module lib.procedures.dataloaders_procedure)": [[38, "lib.procedures.dataloaders_procedure.create_validation_dataloader"]], "lib.procedures.dataloaders_procedure": [[38, "module-lib.procedures.dataloaders_procedure"]], "evaluate_cls() (in module lib.procedures.evaluations)": [[39, "lib.procedures.evaluations.evaluate_cls"]], "inference_clasification_model() (in module lib.procedures.evaluations)": [[39, "lib.procedures.evaluations.inference_clasification_model"]], "inference_model_classification_coordinate() (in module lib.procedures.evaluations)": [[39, "lib.procedures.evaluations.inference_model_classification_coordinate"]], "lib.procedures.evaluations": [[39, "module-lib.procedures.evaluations"]], "save_auc() (in module lib.procedures.evaluations)": [[39, "lib.procedures.evaluations.save_auc"]], "save_roc() (in module lib.procedures.evaluations)": [[39, "lib.procedures.evaluations.save_roc"]], "update_log() (in module lib.procedures.evaluations)": [[39, "lib.procedures.evaluations.update_log"]], "write() (in module lib.procedures.evaluations)": [[39, "lib.procedures.evaluations.write"]], "write_log() (in module lib.procedures.evaluations)": [[39, "lib.procedures.evaluations.write_log"]], "create_cls() (in module lib.procedures.procedures)": [[40, "lib.procedures.procedures.create_cls"]], "create_cls_kpt() (in module lib.procedures.procedures)": [[40, "lib.procedures.procedures.create_cls_kpt"]], "create_kpt() (in module lib.procedures.procedures)": [[40, "lib.procedures.procedures.create_kpt"]], "lib.procedures.procedures": [[40, "module-lib.procedures.procedures"]], "load_cls_kpt() (in module lib.procedures.procedures)": [[40, "lib.procedures.procedures.load_cls_kpt"]], "load_cls_model() (in module lib.procedures.procedures)": [[40, "lib.procedures.procedures.load_cls_model"]], "load_pretrained_kpt() (in module lib.procedures.procedures)": [[40, "lib.procedures.procedures.load_pretrained_kpt"]], "train_and_evaluate() (in module lib.procedures.procedures)": [[40, "lib.procedures.procedures.train_and_evaluate"]], "train_model() (in module lib.procedures.procedures)": [[40, "lib.procedures.procedures.train_model"]], "models": [[41, "module-models"]], "classificationmodule (class in models.classificationbase)": [[42, "models.ClassificationBase.ClassificationModule"]], "configure_optimizers() (models.classificationbase.classificationmodule method)": [[42, "models.ClassificationBase.ClassificationModule.configure_optimizers"]], "forward() (models.classificationbase.classificationmodule method)": [[42, "models.ClassificationBase.ClassificationModule.forward"]], "get_batch_output() (models.classificationbase.classificationmodule method)": [[42, "models.ClassificationBase.ClassificationModule.get_batch_output"]], "loss_calculation() (models.classificationbase.classificationmodule method)": [[42, "models.ClassificationBase.ClassificationModule.loss_calculation"]], "models.classificationbase": [[42, "module-models.ClassificationBase"]], "test_step() (models.classificationbase.classificationmodule method)": [[42, "models.ClassificationBase.ClassificationModule.test_step"]], "training_step() (models.classificationbase.classificationmodule method)": [[42, "models.ClassificationBase.ClassificationModule.training_step"]], "validation_step() (models.classificationbase.classificationmodule method)": [[42, "models.ClassificationBase.ClassificationModule.validation_step"]], "mylightningmodule (class in models.classificationwithcoordinate)": [[43, "models.ClassificationWithCoordinate.MyLightningModule"]], "forward() (models.classificationwithcoordinate.mylightningmodule method)": [[43, "models.ClassificationWithCoordinate.MyLightningModule.forward"]], "models.classificationwithcoordinate": [[43, "module-models.ClassificationWithCoordinate"]], "mylightningmodule (class in models.classificationwithcoordinatedouble)": [[44, "models.ClassificationWithCoordinateDouble.MyLightningModule"]], "forward() (models.classificationwithcoordinatedouble.mylightningmodule method)": [[44, "models.ClassificationWithCoordinateDouble.MyLightningModule.forward"]], "models.classificationwithcoordinatedouble": [[44, "module-models.ClassificationWithCoordinateDouble"]], "regressionmodule (class in models.regressionbase)": [[45, "models.RegressionBase.RegressionModule"]], "configure_optimizers() (models.regressionbase.regressionmodule method)": [[45, "models.RegressionBase.RegressionModule.configure_optimizers"]], "forward() (models.regressionbase.regressionmodule method)": [[45, "models.RegressionBase.RegressionModule.forward"]], "get_batch_output() (models.regressionbase.regressionmodule method)": [[45, "models.RegressionBase.RegressionModule.get_batch_output"]], "loss_calculation() (models.regressionbase.regressionmodule method)": [[45, "models.RegressionBase.RegressionModule.loss_calculation"]], "models.regressionbase": [[45, "module-models.RegressionBase"]], "test_step() (models.regressionbase.regressionmodule method)": [[45, "models.RegressionBase.RegressionModule.test_step"]], "training_step() (models.regressionbase.regressionmodule method)": [[45, "models.RegressionBase.RegressionModule.training_step"]], "validation_step() (models.regressionbase.regressionmodule method)": [[45, "models.RegressionBase.RegressionModule.validation_step"]], "mylightningmodule (class in models.saccpa_sample_ablation_a)": [[46, "models.SACCPA_sample_ablation_A.MyLightningModule"]], "forward() (models.saccpa_sample_ablation_a.mylightningmodule method)": [[46, "models.SACCPA_sample_ablation_A.MyLightningModule.forward"]], "models.saccpa_sample_ablation_a": [[46, "module-models.SACCPA_sample_ablation_A"]], "mylightningmodule (class in models.saccpa_sample_ablation_ab)": [[47, "models.SACCPA_sample_ablation_AB.MyLightningModule"]], "forward() (models.saccpa_sample_ablation_ab.mylightningmodule method)": [[47, "models.SACCPA_sample_ablation_AB.MyLightningModule.forward"]], "models.saccpa_sample_ablation_ab": [[47, "module-models.SACCPA_sample_ablation_AB"]], "mylightningmodule (class in models.saccpa_sample_ablation_abc)": [[48, "models.SACCPA_sample_ablation_ABC.MyLightningModule"]], "forward() (models.saccpa_sample_ablation_abc.mylightningmodule method)": [[48, "models.SACCPA_sample_ablation_ABC.MyLightningModule.forward"]], "models.saccpa_sample_ablation_abc": [[48, "module-models.SACCPA_sample_ablation_ABC"]], "mylightningmodule (class in models.saccpa_sample_ablation_network_structure_parameters)": [[49, "models.SACCPA_sample_ablation_network_structure_parameters.MyLightningModule"]], "forward() (models.saccpa_sample_ablation_network_structure_parameters.mylightningmodule method)": [[49, "models.SACCPA_sample_ablation_network_structure_parameters.MyLightningModule.forward"]], "models.saccpa_sample_ablation_network_structure_parameters": [[49, "module-models.SACCPA_sample_ablation_network_structure_parameters"]], "mylightningmodule (class in models.saccpa_sample_ablation_network_structure_parameters_atrous_attention)": [[50, "models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention.MyLightningModule"]], "forward() (models.saccpa_sample_ablation_network_structure_parameters_atrous_attention.mylightningmodule method)": [[50, "models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention.MyLightningModule.forward"]], "models.saccpa_sample_ablation_network_structure_parameters_atrous_attention": [[50, "module-models.SACCPA_sample_ablation_network_structure_parameters_atrous_attention"]], "mylightningmodule (class in models.saccpa_sample_ablation_null)": [[51, "models.SACCPA_sample_ablation_null.MyLightningModule"]], "forward() (models.saccpa_sample_ablation_null.mylightningmodule method)": [[51, "models.SACCPA_sample_ablation_null.MyLightningModule.forward"]], "models.saccpa_sample_ablation_null": [[51, "module-models.SACCPA_sample_ablation_null"]], "mylightningmodule (class in models.saccpa_sample)": [[53, "models.SACCPA_sample.MyLightningModule"]], "forward() (models.saccpa_sample.mylightningmodule method)": [[53, "models.SACCPA_sample.MyLightningModule.forward"]], "models.saccpa_sample": [[53, "module-models.SACCPA_sample"]]}})